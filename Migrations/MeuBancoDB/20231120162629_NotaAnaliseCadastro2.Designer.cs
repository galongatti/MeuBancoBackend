// <auto-generated />
using System;
using MeuBancoBackend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeuBancoBackend.Migrations.MeuBancoDB
{
    [DbContext(typeof(MeuBancoDBContext))]
    [Migration("20231120162629_NotaAnaliseCadastro2")]
    partial class NotaAnaliseCadastro2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MeuBancoBackend.Model.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("MeuBancoBackend.Model.Emprestimo", b =>
                {
                    b.Property<long>("IdEmprestimo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdEmprestimo"), 1L, 1);

                    b.Property<DateTime?>("DataSolicitacao")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("IdPessoa")
                        .IsRequired()
                        .HasColumnType("BIGINT");

                    b.Property<int?>("NotaSERASA")
                        .HasColumnType("int");

                    b.Property<int?>("NotaSalario")
                        .HasColumnType("INT");

                    b.Property<decimal?>("PercentualSalario")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<int?>("ScoreSERASA")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorAprovado")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal?>("ValorSolicitado")
                        .HasColumnType("DECIMAL(18,2)");

                    b.HasKey("IdEmprestimo");

                    b.HasIndex("IdPessoa");

                    b.ToTable("Emprestimo", (string)null);
                });

            modelBuilder.Entity("MeuBancoBackend.Model.Pessoa", b =>
                {
                    b.Property<long?>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("IdPessoa"), 1L, 1);

                    b.Property<string>("CPF")
                        .HasColumnType("VARCHAR(14)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("DATE");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PrimeiroNome")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RendaBruta")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("IdPessoa");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Pessoa", (string)null);
                });

            modelBuilder.Entity("MeuBancoBackend.Model.Emprestimo", b =>
                {
                    b.HasOne("MeuBancoBackend.Model.Pessoa", "Pessoa")
                        .WithMany("Emprestimos")
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EMPRESTIMO_PESSOA");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("MeuBancoBackend.Model.Pessoa", b =>
                {
                    b.HasOne("MeuBancoBackend.Model.AspNetUsers", "Usuario")
                        .WithOne("Pessoa")
                        .HasForeignKey("MeuBancoBackend.Model.Pessoa", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PESSOA_USUARIO");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MeuBancoBackend.Model.AspNetUsers", b =>
                {
                    b.Navigation("Pessoa")
                        .IsRequired();
                });

            modelBuilder.Entity("MeuBancoBackend.Model.Pessoa", b =>
                {
                    b.Navigation("Emprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
